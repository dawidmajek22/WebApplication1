// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250919071748_klasa")]
    partial class klasa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodPocztowy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miejscowosc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Panstwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelKomorkowy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelStacjonarny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypAdresu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Www")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adres");
                });

            modelBuilder.Entity("WebApplication1.Models.Hod_Rasy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GRUPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAZWA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("is_fci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nr_grupy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hod_Rasy");
                });

            modelBuilder.Entity("WebApplication1.Models.Hodowca", b =>
                {
                    b.Property<int>("IdHodowcy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHodowcy"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHodowcy");

                    b.ToTable("Hodowca");
                });

            modelBuilder.Entity("WebApplication1.Models.HodowcaHodowlaView", b =>
                {
                    b.Property<int>("HodowlaId")
                        .HasColumnType("int");

                    b.Property<int>("IdHodowcy")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Masc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vw_HodowcaHodowla", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Hodowla", b =>
                {
                    b.Property<int>("HodowlaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HodowlaId"));

                    b.Property<int?>("IdHodowcy")
                        .HasColumnType("int");

                    b.Property<string>("Masc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HodowlaId");

                    b.HasIndex("IdHodowcy");

                    b.ToTable("Hodowla");
                });

            modelBuilder.Entity("WebApplication1.Models.HodowlaAdres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<int>("HodowlaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("HodowlaId");

                    b.ToTable("HodowlaAdres");
                });

            modelBuilder.Entity("WebApplication1.Models.klasa_lookup", b =>
                {
                    b.Property<int>("KLASA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KLASA_ID"));

                    b.Property<string>("DO_ILE_MIESIECY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAZWA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OD_ILE_MIESIECY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TYP_OCENY")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KLASA_ID");

                    b.ToTable("klasa_lookup");
                });

            modelBuilder.Entity("WebApplication1.Models.Hodowla", b =>
                {
                    b.HasOne("WebApplication1.Models.Hodowca", "Hodowca")
                        .WithMany()
                        .HasForeignKey("IdHodowcy");

                    b.Navigation("Hodowca");
                });

            modelBuilder.Entity("WebApplication1.Models.HodowlaAdres", b =>
                {
                    b.HasOne("WebApplication1.Models.Adres", "Adres")
                        .WithMany("HodowlaAdresy")
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Hodowla", "Hodowla")
                        .WithMany("HodowlaAdresy")
                        .HasForeignKey("HodowlaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");

                    b.Navigation("Hodowla");
                });

            modelBuilder.Entity("WebApplication1.Models.Adres", b =>
                {
                    b.Navigation("HodowlaAdresy");
                });

            modelBuilder.Entity("WebApplication1.Models.Hodowla", b =>
                {
                    b.Navigation("HodowlaAdresy");
                });
#pragma warning restore 612, 618
        }
    }
}
